from scipy.stats import t
import numpy as np
import matplotlib.pyplot as plt

# Step 1: Generate 100 random numbers from t-distribution with df=10
degrees_of_freedom_new = 10  # degrees of freedom
random_numbers_new = t.rvs(degrees_of_freedom_new, size=100)

# Step 2: Calculate mean μ and standard deviation σ of these numbers
mean_of_random_numbers_new = np.mean(random_numbers_new)
std_dev_of_random_numbers_new = np.std(random_numbers_new)

# Step 3: Create 15 sampling groups, each with 30 samples
sample_size_new = 30
num_groups_new = 15
sampling_group_means_new = []

for _ in range(num_groups_new):
    sample_new = np.random.choice(random_numbers_new, size=sample_size_new, replace=False)
    sampling_group_means_new.append(np.mean(sample_new))

# Step 4: Calculate the mean of the sampling group means
mean_of_sampling_group_means_new = np.mean(sampling_group_means_new)

# Step 5: Verify CLT
# The standard deviation of the sample means (σx) should be close to σ/√n
std_dev_of_sample_means_new = np.std(sampling_group_means_new)
expected_std_dev_of_sample_means_new = std_dev_of_random_numbers_new / np.sqrt(sample_size_new)

# Step 6: Plot histogram of the sample means
plt.hist(sampling_group_means_new, bins=10, color='blue', edgecolor='black', alpha=0.7)
plt.xlabel('Sample Means (New)')
plt.ylabel('Frequency')
plt.title('Histogram of Sample Means (New)')
plt.show()

# Step 7: Print various statistics
print("Mean of random numbers (New):", mean_of_random_numbers_new)
print("Standard deviation of random numbers (New):", std_dev_of_random_numbers_new)
print("Mean of sampling group means (New):", mean_of_sampling_group_means_new)
print("Standard deviation of sampling group means (New):", std_dev_of_sample_means_new)
print("Expected standard deviation of sampling group means (New):", expected_std_dev_of_sample_means_new)
